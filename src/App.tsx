import { useEffect } from "react";
import { getIntersections } from './intersections'
import paper from 'paper'
import initwasm, { rust_get_intersections } from '../intersections/pkg'
const pathToVectorNetwork = (path: any) => {
  const curves = path.getCurves()
  const res = []
  for (let i = 0; i < curves.length; i++) {
    const curve = curves[i].getValues();
    res.push(curve)
  }
  return res
}
export default function App() {
  useEffect(() => {
    main()
  }, [])

  const main = async () => {
    await initwasm()
    paper.setup('canvas-id');
    const words1 = paper.project.importSVG(document.getElementById('path1') as any).children[1] as any;
    const inrsections1 = pathToVectorNetwork(words1)
    console.time('wasm time')
    const wasm_res = rust_get_intersections(new Float64Array(inrsections1.flat()));
    const wasm_chunk = chunkArray(wasm_res, 8)
    console.timeEnd('wasm time')
    const set1 = new Set()
    for (let i = 0; i < wasm_chunk.length; i++) {
      const item = wasm_chunk[i];
      set1.add(`${item[0].toFixed(8)}#${item[2].toFixed(8)}#${item[3].toFixed(8)}`)
    }
    console.log(wasm_chunk);

    const myIntersections: any = []
    console.time('time')
    getIntersections(inrsections1, undefined, myIntersections)
    console.timeEnd('time')
    // const set1 = new Set()
    // for (let i = 0; i < myIntersections.length; i++) {
    //   const item = myIntersections[i];
    //   set1.add(`${item[0].toFixed(8)}#${item[1].toFixed(8)}#${item[2].toFixed(8)}`)
    // }
    console.log(myIntersections);
    console.log(set1);


    const paperIntersections = []
    console.time('time2')
    const intersections = words1.getIntersections()
    for (let j = 0; j < intersections.length; j++) {
      const item = intersections[j];
      const temp = []
      temp.push(item.time)
      temp.push(item.point.x)
      temp.push(item.point.y)
      temp.push(item.intersection.time)
      temp.push(item.intersection.point.x)
      temp.push(item.intersection.point.y)
      paperIntersections.push([...temp])
    }
    console.timeEnd('time2')
    const set2 = new Set()
    for (let i = 0; i < paperIntersections.length; i++) {
      const item = paperIntersections[i];
      set2.add(`${item[0].toFixed(8)}#${item[1].toFixed(8)}#${item[2].toFixed(8)}`)
    }
    console.log(paperIntersections);
    console.log(set2);
    for (const v of set2) {
      if (!set1.has(v)) {
        console.log(v);
      }
    }
  }

  return (
    <div>
      <canvas id="canvas-id"></canvas>
      <svg width="100" height="100" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg" id="path1">
        <path d="M 0 237.85574340820312 C 0 184.52241134643555 20.400001525878906 87.85572814941406 102 127.85572814941406 M 0 237.85574340820312 C 0 291.1890754699707 183.5999984741211 167.85572814941406 102 127.85572814941406 M 0 237.85574340820312 C 0 291.1890754699707 202.66666793823242 189.18904495239258 250 136.855712890625 M 0 237.85574340820312 C 0 291.1890754699707 393.80000001192093 237.2557144165039 393 122.855712890625 M 0 237.85574340820312 C 0 291.1890754699707 347.66666412353516 318.855712890625 413 304.855712890625 M 0 237.85574340820312 C 0 184.52241134643555 367.1999969482422 389.6556854248047 492 292.8556823730469 M 0 237.85574340820312 C 0 291.1890754699707 129.6666669845581 121.52235794067383 144 76.8556900024414 M 0 237.85574340820312 C 0 291.1890754699707 316.5999984741211 95.85569190979004 259 27.85569190979004 M 0 237.85574340820312 C 0 184.52241134643555 20.666667938232422 316.5223808288574 68 358.855712890625 M 0 237.85574340820312 C 0 184.52241134643555 219 322.0557098388672 215 394.855712890625 M 0 237.85574340820312 C 0 184.52241134643555 291.6666660308838 398.855712890625 320 432.855712890625 M 0 237.85574340820312 C 0 184.52241134643555 442.79999923706055 291.855712890625 426 399.855712890625 M 102 127.85572814941406 C 20.400001525878906 87.85572814941406 297.3333320617676 84.52238082885742 250 136.855712890625 M 102 127.85572814941406 C 20.400001525878906 87.85572814941406 392.19999998807907 8.455711364746094 393 122.855712890625 M 102 127.85572814941406 C 20.400001525878906 87.85572814941406 478.33333587646484 290.855712890625 413 304.855712890625 M 102 127.85572814941406 C 20.400001525878906 87.85572814941406 616.8000030517578 196.05567932128906 492 292.8556823730469 M 102 127.85572814941406 C 20.400001525878906 87.85572814941406 158.3333330154419 32.189022064208984 144 76.8556900024414 M 102 127.85572814941406 C 20.400001525878906 87.85572814941406 316.5999984741211 95.85569190979004 259 27.85569190979004 M 102 127.85572814941406 C 20.400001525878906 87.85572814941406 115.33333206176758 401.1890449523926 68 358.855712890625 M 102 127.85572814941406 C 20.400001525878906 87.85572814941406 211 467.6557159423828 215 394.855712890625 M 102 127.85572814941406 C 20.400001525878906 87.85572814941406 348.3333339691162 466.855712890625 320 432.855712890625 M 102 127.85572814941406 C 20.400001525878906 87.85572814941406 409.20000076293945 507.855712890625 426 399.855712890625 M 250 136.855712890625 C 297.3333320617676 84.52238082885742 392.19999998807907 8.455711364746094 393 122.855712890625 M 250 136.855712890625 C 202.66666793823242 189.18904495239258 392.19999998807907 8.455711364746094 393 122.855712890625 M 250 136.855712890625 C 202.66666793823242 189.18904495239258 478.33333587646484 290.855712890625 413 304.855712890625 M 250 136.855712890625 C 202.66666793823242 189.18904495239258 616.8000030517578 196.05567932128906 492 292.8556823730469 M 250 136.855712890625 C 297.3333320617676 84.52238082885742 158.3333330154419 32.189022064208984 144 76.8556900024414 M 250 136.855712890625 C 202.66666793823242 189.18904495239258 201.4000015258789 -40.14430809020996 259 27.85569190979004 M 250 136.855712890625 C 297.3333320617676 84.52238082885742 115.33333206176758 401.1890449523926 68 358.855712890625 M 250 136.855712890625 C 297.3333320617676 84.52238082885742 211 467.6557159423828 215 394.855712890625 M 250 136.855712890625 C 297.3333320617676 84.52238082885742 348.3333339691162 466.855712890625 320 432.855712890625 M 250 136.855712890625 C 297.3333320617676 84.52238082885742 409.20000076293945 507.855712890625 426 399.855712890625 M 393 122.855712890625 C 392.19999998807907 8.455711364746094 478.33333587646484 290.855712890625 413 304.855712890625 M 393 122.855712890625 C 392.19999998807907 8.455711364746094 367.1999969482422 389.6556854248047 492 292.8556823730469 M 393 122.855712890625 C 393.80000001192093 237.2557144165039 129.6666669845581 121.52235794067383 144 76.8556900024414 M 393 122.855712890625 C 393.80000001192093 237.2557144165039 201.4000015258789 -40.14430809020996 259 27.85569190979004 M 393 122.855712890625 C 392.19999998807907 8.455711364746094 20.666667938232422 316.5223808288574 68 358.855712890625 M 393 122.855712890625 C 392.19999998807907 8.455711364746094 211 467.6557159423828 215 394.855712890625 M 393 122.855712890625 C 392.19999998807907 8.455711364746094 348.3333339691162 466.855712890625 320 432.855712890625 M 393 122.855712890625 C 392.19999998807907 8.455711364746094 409.20000076293945 507.855712890625 426 399.855712890625 M 413 304.855712890625 C 478.33333587646484 290.855712890625 616.8000030517578 196.05567932128906 492 292.8556823730469 M 413 304.855712890625 C 347.66666412353516 318.855712890625 367.1999969482422 389.6556854248047 492 292.8556823730469 M 413 304.855712890625 C 478.33333587646484 290.855712890625 158.3333330154419 32.189022064208984 144 76.8556900024414 M 413 304.855712890625 C 478.33333587646484 290.855712890625 201.4000015258789 -40.14430809020996 259 27.85569190979004 M 413 304.855712890625 C 478.33333587646484 290.855712890625 20.666667938232422 316.5223808288574 68 358.855712890625 M 413 304.855712890625 C 478.33333587646484 290.855712890625 211 467.6557159423828 215 394.855712890625 M 413 304.855712890625 C 478.33333587646484 290.855712890625 348.3333339691162 466.855712890625 320 432.855712890625 M 413 304.855712890625 C 478.33333587646484 290.855712890625 409.20000076293945 507.855712890625 426 399.855712890625 M 492 292.8556823730469 C 616.8000030517578 196.05567932128906 158.3333330154419 32.189022064208984 144 76.8556900024414 M 492 292.8556823730469 C 616.8000030517578 196.05567932128906 201.4000015258789 -40.14430809020996 259 27.85569190979004 M 492 292.8556823730469 C 616.8000030517578 196.05567932128906 20.666667938232422 316.5223808288574 68 358.855712890625 M 492 292.8556823730469 C 616.8000030517578 196.05567932128906 211 467.6557159423828 215 394.855712890625 M 492 292.8556823730469 C 616.8000030517578 196.05567932128906 291.6666660308838 398.855712890625 320 432.855712890625 M 492 292.8556823730469 C 616.8000030517578 196.05567932128906 409.20000076293945 507.855712890625 426 399.855712890625 M 144 76.8556900024414 C 158.3333330154419 32.189022064208984 201.4000015258789 -40.14430809020996 259 27.85569190979004 M 144 76.8556900024414 C 129.6666669845581 121.52235794067383 316.5999984741211 95.85569190979004 259 27.85569190979004 M 144 76.8556900024414 C 158.3333330154419 32.189022064208984 115.33333206176758 401.1890449523926 68 358.855712890625 M 144 76.8556900024414 C 158.3333330154419 32.189022064208984 211 467.6557159423828 215 394.855712890625 M 144 76.8556900024414 C 158.3333330154419 32.189022064208984 348.3333339691162 466.855712890625 320 432.855712890625 M 144 76.8556900024414 C 158.3333330154419 32.189022064208984 409.20000076293945 507.855712890625 426 399.855712890625 M 259 27.85569190979004 C 201.4000015258789 -40.14430809020996 115.33333206176758 401.1890449523926 68 358.855712890625 M 259 27.85569190979004 C 201.4000015258789 -40.14430809020996 211 467.6557159423828 215 394.855712890625 M 259 27.85569190979004 C 201.4000015258789 -40.14430809020996 348.3333339691162 466.855712890625 320 432.855712890625 M 259 27.85569190979004 C 201.4000015258789 -40.14430809020996 409.20000076293945 507.855712890625 426 399.855712890625 M 68 358.855712890625 C 115.33333206176758 401.1890449523926 211 467.6557159423828 215 394.855712890625 M 68 358.855712890625 C 20.666667938232422 316.5223808288574 211 467.6557159423828 215 394.855712890625 M 68 358.855712890625 C 20.666667938232422 316.5223808288574 348.3333339691162 466.855712890625 320 432.855712890625 M 68 358.855712890625 C 20.666667938232422 316.5223808288574 442.79999923706055 291.855712890625 426 399.855712890625 M 215 394.855712890625 C 219 322.0557098388672 348.3333339691162 466.855712890625 320 432.855712890625 M 215 394.855712890625 C 211 467.6557159423828 442.79999923706055 291.855712890625 426 399.855712890625 M 320 432.855712890625 C 348.3333339691162 466.855712890625 409.20000076293945 507.855712890625 426 399.855712890625 M 320 432.855712890625 C 291.6666660308838 398.855712890625 442.79999923706055 291.855712890625 426 399.855712890625"
          stroke="#D9D9D9" />
      </svg>
    </div>
  );
}


function chunkArray(array: Float64Array, chunkSize: number) {
  let result = [];
  for (let i = 0; i < array.length; i += chunkSize) {
    let chunk = array.slice(i, i + chunkSize);
    result.push(chunk);
  }

  return result;
}